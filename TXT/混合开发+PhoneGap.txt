混合开发：
	web app
		技术： html5 + css + js(库，框架) 编写移动端
		优点：开发周期短，跨平台
		缺点：性能一般，默认无法调取设备信息(麦克风，摄像头，通讯录)
		场景：手机淘宝，京东，网易
	native app
		java -> android			object-c	-> ios
		优点：性能高，默认就可以调取设备信息
		缺点：开发周期长（迭代慢），团队规模大
		场景：大型游戏，应用
	hybird app 
		h5 -> 搭建页面
		通过第三方的native库，访问设备信息
			a) cordova   H5(VUE)+cordova  (adobe产品)
			b) wx_jssdk  H5 + wx_jssdk    (限定) 微信   |  微信公众号
			c) mui + hbuilder
			d) reactNative react + reactNative
			e) angular + ionic
			f) vue + weex
phoneGap:
	干嘛的： 第三方的打包工具| 搭建开发环境 | 内部提供 cordova库
	官网：https://phonegap.com/

	安装：
		pc: phonegap desktop   |  搭建项目环境
		移动端: phonegap developer | 测试查看的  | 保证手机和电脑要在同一个网段(连了同一个wifi，同一路由)

	开发:	
		无框架：使用
			
		vue:   使用
		API:	http://www.phonegapcn.com/docs/zh/cn/index.html  | https://phonegap.com/
			Battery Status  电池信息
			Camera	照相机
			Contacts 通讯录
			Device Info 设备信息
			Device Motion (accelerometer) 重力感应
			Device Orientation (compass) 罗盘(指南针)
			Dialogs (notification) 模态框
			File 文件操作(增删改查)
			File Transfer 上传
			Geolocation  地理定位
			Globalization 全球化
			InAppBrowser 在app内部开启新窗口
			Media Capture 采集
			Network Information  网络状态
			Splash Screen 欢迎屏幕
			Status Bar 状态栏
			Whitelist 白名单
			Vibration 震动

	打包
		1)	命令行-> 文件 -> 上传到 appstore|应用商城
			npn i cordova -g
			cordova build
		2)  在线打包 phonegap官网在线打包(app就在phonegap网)
			https://build.phonegap.com/ -> new app

			private 私有包，禁用
			open-source
				项目传到github仓库->复制地址-> pull -> ready to build
			phonegap项目上传github
				1) 登录->new repository->phonegap目录，拖拽(upload file)
				2) git clone 仓库地址 -> git add (添加到缓存区)-> git commit -m xx (git仓库)
					git push (丢到远端)

VUE + cordova 配置
  方案1：
    phonegap
      vue
        webpack.config.js 
          配置  path: path.resolve(__dirname, '../pgtest/www/dist')
                publicPath: '../test/www/dist/'
      cordova
        www
          dist  (vue 打包后的目录)
          index.html  配置 <script src="./dist/build.js"></script>
    vue：
      直接使用cordova API
      npm run build 打包至 www/dist -> 手机实时查看
      pc机 在phonegap上查看, vue 服务器用不上了


-----------------------------------------------------------------
部署
      测试空间 && 上传 && 更新
        创建svn目录->copy网站到了里面->checkout(填写svn地址|密码==百度云空间密码)->开发->commit 上传
        密码不对：保存其他svn地址的密码,需要清空密码
          C:\Users\你的用户名\AppData\Roaming\Subversion\auth
            清空当前目录所有

百度云BAE专业：

	系统默认开放HTTP的80为访问端口，8080为监听端口；HTTPS的443为访问端口，8443为监听端口，不可修改和删除。
	用户自定义的端口只支持TCP协议，且最多支持添加100个。

	小程序端口必须是443

	app.conf是BAE提供的部署配置文件

	Node.js应用中必须监听18080端口，该端口不可更改。

	BAE专业版的SVN、Git身份验证采用AK/SK，不是百度登录的用户名和密码。

	BAE中开启--harmony从而在node.js中使用ES6语法
		package.json: "start": "node xxx.js"修改为"start": "node --harmony xxx.js"
