新闻客户端
	1. 环境搭建(vue-cli +  vue-router + axios + vuex == 全家桶)
	2. 项目分析(组件安排)
		dist
			|-...
		static
			|-data:
				|-数据.json
				....
		src
			|-assets
				|-js
				|-css
				|-image
			|-component
				|-	navbar.vue / footbar.vue
				|-	home.vue / follow.vue / column.vue / user.vue
				|-  detail.vue / login.vue / reg.vue
				|-	silder.vue / error.vue / list.vue
			|-filters
				date.js
				fillzero.js
			|-loading
				index.js
				|-component
					|-loading.vue
			|-store
				|-index.js
				|-actions.js
				|-mutations.js
				|-getters.js
				|-state.js
				|-types.js
			main.js
			App.vue
			router.config.js
		package.json
	3. 布局
		a) 切图(需要设计稿)
		b) UI库	(bootstrap/elelementUI pc端 / mintUI移动端 / 妹子UI/ant.design/weex)
		c) html+css模板 移植 到 组件
			01 全局资源 在主入口文件(index.html)引入
			02 全局资源 主程序(main.js)
			03 自执行脚本，跟着当前组件走

	4. 路由搭建
		路由监听
			watch:{
				$route(){}
			}

	5. 数据交互+全局过滤器+全局组件（loading）

	6. 非状态管理（控制导航显示)
		this.$root  返回的是根实例  new Vue (main.js)  
		this.$root.$data.根数据名;
		this.$root.$data.根数据名=值

	7. 状态管理
		

	组件懒加载

		原理: 利用webpack对代码进行分割是懒加载的前提，懒加载就是异步调用组件，需要时候才下载,
			  告诉webpack把组件打包成块，告诉路由激活时触发一个函数，函数再加载组件,加载时会请求组件的块代码，块代码会插入当前组件的样式
		webpack配置:
			output:
				chunkFilename:'chunks/[name]-[chunkhash:8].js',//build之后的代码更便于识别
		路由配置: 
			const home =()=>import(/* webpackChunkName: "group-home" */ "../components/home.vue");
			import 导入 需要安装 babel-plugin-syntax-dynamic-import ,import会被提升，先执行?
			配置 babelrc  "plugins": ["syntax-dynamic-import"]
			webpackChunkName: "group-home" 给块命名 | 同名会拆到一个块，可减少请求次数
		组件内部注册异步组件:
			const navbar =()=>import(/* webpackChunkName: "group-home" */ "./components/navbar.vue");
			components:{navbar}
			navbar 不异步的话，代码会打到app.js,而不是home块或者navbar块

		状态管理： vuex   npm i vuex 
	何时用：开发中大型项目
		思维：
 		   store 对象
 		   角色：
 		           mapActions()
 		           store.dispatch(type,payload)            state.xx=val
 		       component --> actions --> mutations --> state <-- getters <-- component
    		                  store.commit()
 		                                                               mapGetters()
                                                    state.val
                                                  		      this.$store.state.val

       		 component:  组件,发送请求，订阅仓库数据，数据处理
      		  actions： 负责处理业务逻辑，异步请求
      		  mutations： 数据突变，修改state状态
      		  state： 存放数据，仓库
      		  getters：向state抓取数据

		操作流程：
   		 1. 引入vuex
   		 2. 创建状态管理对象store
    		 3. 配置角色
    