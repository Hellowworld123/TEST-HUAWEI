启动：
        net start mysql
    停止：
        net stop mysql

     登录mysql参数：
          mysql -V查看版本号
          mysql -u指定用户名，如mysql -uroot
          mysql -p指定密码，同上
          mysql -P指定端口号，如mysql -P3306
          mysql -h指定服务器名，如mysql -h127.0.0.1
         
     退出：
          exit
          quit
          \q

     修改MySql提示符
          登陆时mysql -uroot -p --prompt 提示符
          登陆后使用prompt 提示符
          提示符：
               \D     完整的日期
               \d     当前数据库
               \h     服务器名称
               \u     当前用户

     MySql常用命令
          SELECT VERSION();显示当前服务器版本
          SELECT NOW();显示当前日期时间
          SELECT USER();显示当前用户

     MySQL语句的规范：
          1.关键字与函数名称全部大写
          2.数据库名称，表名称，字段名称全部小写
          3.SQL语句必须以分号结尾

     创建数据库：
          CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name
          [DEFAULT] CHARACTER SET [=] charset_name     //设置编码方式
     查看错误信息：
          SHOW WARNINGS;
     查看编码格式：
          SHOW CREATE DATABASE db_name;
     查看当前服务器下的数据库列表：
          SHOW {DATABASES | SCHEMA};

     修改数据库：
          ALTER {DATABASE | SCHEMA} [db_name]
          [DEFAULT] CHARACTER SET [=] charset_name

     删除数据库：
          DROP {DATABASE | SCHEMA} [IF EXISTS] db_name;

     选择数据库：
          USE db_name;
     显示当前数据库：
          SELECT DATABASE();
     -----------------------------------------------------------------------------
     创建数据表(创建字段名)：
          CREATE TABLE [IF NOT EXISTS] table_name (
               column_name data_type,
               ......
          )
     显示数据表列表：
          SHOW TABLES [FROM db_name];
     显示数据表的结构：
          SHOW COLUMNS FROM tb_name;

     插入记录(创建字段下的数据)：
          INSERT [INTO] tb_name [(col_name,...)] VALUES(val,...);
     查找记录：
          SELECT expr,... FROM tb_name;

     修改数据表：
        添加一列：
            ALTER TABLE tb_name ADD [COLUMN] column_name data_type [FIRST | AFTER column_name];
        添加多列：
            ALTER TABLE tb_name ADD [COLUMN] (column_name data_type,…);
        删除列：
            ALTER TABLE tb_name DROP [COLUMN] column_name,DROP [COLUMN] column_name,……

     插入记录INSERT：
        INSERT [INTO] tb_name [(column_name,…)] { VALUES | VALUE } ({expr | DEFAULT},…),(…),…
        
        INSERT [INTO] tb_name SET column_name={expr | DEFAULT},…,…

        INSERT [INTO] tb_name [(column_name,…)] SELECT …

     更新记录UPDATE：
        UPDATE [LOW_PRIORITY] [IGNORE] tb_name SET column_name1={expr1 | DEFAULT} [, column_name2={expr2 | DEFAULT}]... [WHERE where_condition]

        eg:
        UPDATE users SET age = age + 5, sex = 2 WHERE username='TOM’;
     删除记录DELETE：
        DELETE FROM tb_name [WHERE where_condition]



https://blog.csdn.net/chaofei_liang/article/details/70193824
mysql登录出现1045错误修改方法
=================================================================================================================================================================
 在PHP中使用MySQL

    连接数据库函数：
        $link = mysql_connect(host,username,password);
          参数释义：
               host，mysql的主机名或ip地址
               usernane，mysql用户名
               pasword，mysql密码
          返回值：
               当连接成功时返回连接标识符
               当连接失败时返回false

     选择数据库：
          mysql_select_db(数据库名称, $link);
          参数2可选，当有多个mysql连接时，选择要操作的连接，默认为最近一次连接
          选择成功返回true，选择失败返回false

     查询语句（执行一条sql语句）：
          mysql_query(sql命令,$link);
          参数2可选，当有多个mysql连接时，选择要操作的连接，默认为最近一次连接
          insert时，执行成功返回true，执行失败返回false
     
     设置字符集：
          mysql_query("set names utf8");

     插入数据：
          $query1 = "insert db_name (字段名) values(对应值)";
          mysql_query($query1);

     更新数据：
          $query2 = "update db_name set 字段名=值 where 条件";
          mysql_query($query2);

     删除记录：
          $query3 = "delete from db_name where 条件"
          mysql_query($query3);

     查询记录：
          $query4 = "select * from db_name";
          $res = mysql_query($query4);
          矩阵方式查看数据：mysql_result($res,0,1);
         
          索引数组查看数据：mysql_fetch_row($res);
          关联数组查看数据：mysql_fetch_assoc($res);
          对象方式查看数据：mysql_fetch_object($res);
          以上三种方式每次执行返回一条记录的数据，可配合循环多次执行，查询所有数据

     mysql_error( $link );
          返回上一个mysql操作产生的文本报错
          参数1可选，为要显示错误信息的mysql连接
          
     断开数据库的函数：
          mysql_close( $link );
          断开连接，参数可选，为要断开连接的数据库
          程序执行完毕自动断开，可省略不用

     排序：SELECT * FROM stu ORDER BY 笔试 LIMIT 0,8